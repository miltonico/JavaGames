/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Server;

import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import javax.swing.JOptionPane;

/**
 *
 * @author TIMBERWOLF
 */
public class Server extends javax.swing.JFrame {

    /**
     * Creates new form Server
     */
    
    public static boolean iniciado=false;
    
    public static int indexTileSize=0;
    public static int indexUDPPort=1;
    public static int indexTCPPort=2;
    public static int indexMaxPlayers=3;
    public static int indexMaxClients=4;
    public static int indexFriendlyFire=5;
    public static int indexTetrisSkin=6;
    public static int indexMegamanSkin=7;
    
    public static String[][] propiedades=new String[2][8];//[nombre,valor],[cantidad]
    
    Tile tile=new Tile();
    Teclas teclas=new Teclas();
    
    public Server() {
        
        initComponents();
        this.setLocationRelativeTo(null);
        
        propiedades[0][0]="tileSize=";
        propiedades[0][1]="UDPPort=";
        propiedades[0][2]="TCPPort=";
        propiedades[0][3]="maxPlayers=";
        propiedades[0][4]="maxClients=";
        propiedades[0][5]="friendlyFire=";
        propiedades[0][6]="tetrisSkin=";
        propiedades[0][7]="megamanSkin=";
        
        propiedades[1][0]="16";
        propiedades[1][1]="7777";
        propiedades[1][2]="7777";
        propiedades[1][3]="0";
        propiedades[1][4]="0";
        propiedades[1][5]="true";
        propiedades[1][6]="false";
        propiedades[1][7]="false";
        
        this.getProperties();
        
        puerto.setText(propiedades[1][indexUDPPort]);
        Tile.TILE_WIDTH=Integer.parseInt(propiedades[1][indexTileSize]);
        Tile.TILE_HEIGHT=Integer.parseInt(propiedades[1][indexTileSize]);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        informacion = new javax.swing.JTextArea();
        comando = new javax.swing.JTextField();
        botonEnviar = new javax.swing.JButton();
        puerto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        botonIniciar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(255, 255, 0));

        jLabel1.setFont(new java.awt.Font("Showcard Gothic", 0, 16)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("BlockMan X Server");

        informacion.setEditable(false);
        informacion.setColumns(20);
        informacion.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        informacion.setRows(5);
        jScrollPane1.setViewportView(informacion);

        comando.setEditable(false);
        comando.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        comando.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comandoKeyPressed(evt);
            }
        });

        botonEnviar.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        botonEnviar.setText("ENVIAR");
        botonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEnviarActionPerformed(evt);
            }
        });

        puerto.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        puerto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                puertoKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        jLabel2.setText("PUERTO");

        botonIniciar.setFont(new java.awt.Font("Showcard Gothic", 0, 14)); // NOI18N
        botonIniciar.setText("INICIAR");
        botonIniciar.setMaximumSize(new java.awt.Dimension(119, 26));
        botonIniciar.setMinimumSize(new java.awt.Dimension(119, 26));
        botonIniciar.setPreferredSize(new java.awt.Dimension(119, 26));
        botonIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(comando, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(puerto, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(puerto, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonIniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comando)
                    .addComponent(botonEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEnviarActionPerformed
        procesarComando(comando.getText());
    }//GEN-LAST:event_botonEnviarActionPerformed

    private void comandoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comandoKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            procesarComando(comando.getText());
        }
    }//GEN-LAST:event_comandoKeyPressed

    private void puertoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_puertoKeyPressed
        
    }//GEN-LAST:event_puertoKeyPressed

    private void botonIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIniciarActionPerformed
        if(iniciado){
            System.exit(0);
        }else{
            this.iniciado=true;
            try{
                Integer.parseInt(puerto.getText());
            }catch(Exception e){
                agregarInformacion("Error: puerto ingresado no valido!");
                return;
            }
            puerto.setEditable(false);
            (new Thread(new UDPServer())).start();
            (new Thread(new ServerJuego())).start();
            comando.setEditable(true);
            botonIniciar.setText("DETENER");
        }
    }//GEN-LAST:event_botonIniciarActionPerformed

    public void procesarComando(String texto){
        comando.setText("");
        if(texto.equals("next_level")){
            ServerJuego.nivelServer++;
        }
        if(!texto.equals("")){
            agregarInformacion(texto);
        }
    }
    
    public static void agregarInformacion(String texto){
        informacion.setText(informacion.getText()+texto+"\n");
    }
    
    public void borrarInformacion(){
        informacion.setText("");
    }
    
    //0=No es la priopiedad especificada, mayor que cero=Si(especifica la posicion de inicio del valor que corresponde a la propiedad).
    public int esLaPropiedad(String texto,String propiedad){
        //System.out.println("texto="+texto+", propiedad="+propiedad);
        if(texto.length()>=propiedad.length() && texto.substring(0,propiedad.length()).equals(propiedad)){
            return propiedad.length();
        }
        return 0;
    }
    
    /*
    
    //constantes:
    
    indexTileSize=0;
    indexUDPPort=1;
    indexTCPPort=2;
    indexMaxPlayers=3;
    indexMaxClients=4;
    indexFriendlyFire=5;
    indexTetrisSkin=6;
    indexMegamanSkin=7;
    
    */
    public void getProperties(){
        
        String name="Server/properties.txt";
        
        try{
            
            BufferedReader buf=new BufferedReader(new InputStreamReader(MapaServer.class.getClassLoader().getResourceAsStream(name)));
            while(buf.ready()){
                String texto=buf.readLine();
                for(int i=0;i<propiedades[0].length;i++){
                    int es=esLaPropiedad(texto,propiedades[0][i]);
                    if(es!=0){
                        propiedades[1][i]=texto.substring(es,texto.length());
                        break;
                    }
                }
            }
            buf.close();

        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Could not load properties file: "+name);
        }
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Server().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonEnviar;
    private javax.swing.JButton botonIniciar;
    private javax.swing.JTextField comando;
    public static javax.swing.JTextArea informacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextField puerto;
    // End of variables declaration//GEN-END:variables
}
